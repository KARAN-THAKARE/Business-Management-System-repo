import subprocess
from comconfigurationExe.configuration.cache import *

def ENCODING_LIST_APPENED_METHOD(AUTHENTICATION1,AUTHENTICATION2,AUTHENTICATION3,AUTHENTICATION4):
    ENCODING_LIST=[]
    ENCODING_LIST.append(AUTHENTICATION1[1:])
    ENCODING_LIST.append(AUTHENTICATION2[1:])
    ENCODING_LIST.append(AUTHENTICATION3[1:])
    ENCODING_LIST.append(AUTHENTICATION4[0:-1])
    return ENCODING_LIST


def AUTHENTICATION_KEY_GENERATOR_MODULE_INITIAL_METHOD(ENCODING_LIST_MODEL_EXE):
    SYSTEM_UNIQUE_KEY_DEFINDER=ENCODING_LIST_MODEL_EXE[0][0]+ENCODING_LIST_MODEL_EXE[0][2]+ENCODING_LIST_MODEL_EXE[0][4]
    SYSTEM_UNIQUE_KEY_DEFINDER=SYSTEM_UNIQUE_KEY_DEFINDER+ENCODING_LIST_MODEL_EXE[1][1]+ENCODING_LIST_MODEL_EXE[1][3]
    SYSTEM_UNIQUE_KEY_DEFINDER=SYSTEM_UNIQUE_KEY_DEFINDER+ENCODING_LIST_MODEL_EXE[2][0]+ENCODING_LIST_MODEL_EXE[2][2]+ENCODING_LIST_MODEL_EXE[2][4]
    SYSTEM_UNIQUE_KEY_DEFINDER=SYSTEM_UNIQUE_KEY_DEFINDER+ENCODING_LIST_MODEL_EXE[3][1]+ENCODING_LIST_MODEL_EXE[3][2]+ENCODING_LIST_MODEL_EXE[3][3]+ENCODING_LIST_MODEL_EXE[3][4]
    return SYSTEM_UNIQUE_KEY_DEFINDER[::-1]

def AUTHENTICATION_KEY_GENERATOR_MODULE_END_METHOD(ENCODING_LIST_MODEL_EXE):
    EXE_MODULER_ARTIFICIAL_DETECTION_KEY_MANGER=ENCODING_LIST_MODEL_EXE[0][1]+ENCODING_LIST_MODEL_EXE[0][3]+"/"
    EXE_MODULER_ARTIFICIAL_DETECTION_KEY_MANGER=EXE_MODULER_ARTIFICIAL_DETECTION_KEY_MANGER+ENCODING_LIST_MODEL_EXE[1][0]+ENCODING_LIST_MODEL_EXE[1][2]+ENCODING_LIST_MODEL_EXE[1][4]
    EXE_MODULER_ARTIFICIAL_DETECTION_KEY_MANGER=EXE_MODULER_ARTIFICIAL_DETECTION_KEY_MANGER+ENCODING_LIST_MODEL_EXE[2][1]+"/" + ENCODING_LIST_MODEL_EXE[2][3]
    EXE_MODULER_ARTIFICIAL_DETECTION_KEY_MANGER=EXE_MODULER_ARTIFICIAL_DETECTION_KEY_MANGER+ENCODING_LIST_MODEL_EXE[3][0]
    return EXE_MODULER_ARTIFICIAL_DETECTION_KEY_MANGER[::-1]

def CHECK_SYSTEM_UNIQUENESS_ARTIFACT_METHOD():
    UNIQUENESS_ARTIFACT_UUID = subprocess.check_output('wmic csproduct get uuid').decode().split('\n')[1].strip()
    return UNIQUENESS_ARTIFACT_UUID

def CHECK_SYSTEM_AUTHENTICATION_ARTIFACT_METHOD(GET_SYSTEM_UNIQUENESS_ARTIFACT_ID,AUTHENTICATION_KEY_GENERATOR_MODULE_INITIAL_ID,AUTHENTICATION_KEY_GENERATOR_MODULE_END_DD):
    RESULT = {}
    GET_SYSTEM_UNIQUENESS_ARTIFACT_ID_STRING=""
    GET_SYSTEM_UNIQUENESS_ARTIFACT_ID=GET_SYSTEM_UNIQUENESS_ARTIFACT_ID.split("-")
    for each in GET_SYSTEM_UNIQUENESS_ARTIFACT_ID:
        GET_SYSTEM_UNIQUENESS_ARTIFACT_ID_STRING=GET_SYSTEM_UNIQUENESS_ARTIFACT_ID_STRING+str(each)

    if(str(AUTHENTICATION_KEY_GENERATOR_MODULE_INITIAL_ID) in GET_SYSTEM_UNIQUENESS_ARTIFACT_ID_STRING):
        RESULT=SPACETERS_PLAN_CHAKER(AUTHENTICATION_KEY_GENERATOR_MODULE_END_DD)
    else:
        RESULT["isSuccess"]=False
        RESULT["StatusCode"]="00x0F2A"
    return RESULT
